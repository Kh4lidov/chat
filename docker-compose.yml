version: '3.8'
services:
    #PHP Service
    app: &app
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www:delegated
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        depends_on:
            - db
            - redis

    #Nginx Service
    webserver:
        image: nginx:1.22-alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www:delegated
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:8.0.30
        container_name: db
        restart: unless-stopped
        volumes:
            - db-data:/var/lib/mysql:delegated
        ports:
            - "127.0.0.1:3308:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        networks:
            - app-network

    #Redis Service
    redis:
        image: redis:7.0.8-alpine
        container_name: redis
        restart: unless-stopped
        sysctls:
            - net.core.somaxconn=511
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - redis-data:/data:delegated
        networks:
            - app-network
#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    db-data:
        driver: local
    redis-data:
        driver: local
